const getters = {
  sidebar: (state) => state.app.sidebar,
  size: (state) => state.app.size,
  device: (state) => state.app.device,
  visitedViews: (state) => state.tagsView.visitedViews,
  cachedViews: (state) => state.tagsView.cachedViews,
  token: (state) => state.user.token,
  avatar: (state) => state.user.avatar,
  name: (state) => state.user.name,
  introduction: (state) => state.user.introduction,
  tableColumnsMap: (state) => state.table.tableColumnsMap,
  roles: (state) => state.user.roles,
  ifAdmin: (state) => state.user.ifAdmin,
  permission_routes: (state) => state.permission.routes,
  permission_pathList: (state) => state.permission.pathList,
  topRouter: (state) => state.permission.topRouter,
  topHeaderPath: (state) => state.permission.topHeaderPath,
  errorLogs: (state) => state.errorLog.logs,
  userInfo: (state) => state.user.userInfo,
  initPage: (state) => state.table.initPage,
  userDeptId: (state) => state.user.userDeptId,
  imageClass: (state) => state.option.imageClass,
  audioClass: (state) => state.option.audioClass,
  videoClass: (state) => state.option.videoClass,
  dictList: (state) => state.dict.dictList,
  pageSearchData: (state) => state.search.pageSearchData,
  fileClass: (state) => state.option.fileClass,
  thirdShopDataType: (state) => state.option.thirdShopDataType,
  userTerminal_options: (state) => state.option.userTerminal_options,
  orderStatus_options: (state) => state.option.orderStatus_options,
  orderType_options: (state) => state.option.orderType_options,
  goodsPrices_options: (state) => state.option.goodsPrices_options,
  goodsType_options: (state) => state.option.goodsType_options,
  paymentType_options: (state) => state.option.paymentType_options,
  groupingType: (state) => state.option.groupingType,
  role_options: (state) => state.option.role_options,
  job_options: (state) => state.option.job_options,
  labelType: (state) => state.option.labelType,
  goodsType_obj: (state) => state.option.goodsType_obj,
  channelSourceType: (state) => state.option.channelSourceType,
  newChannelSourceArray: (state) => state.option.newChannelSourceArray,
  sidebarRouters: (state) => state.permission.sidebarRouters,
  addRouters: (state) => state.permission.addRouters,
  loadMenus: (state) => state.user.loadMenus,
  thirdShopType: (state) => state.option.thirdShopType,
  liveMode: (state) => state.option.liveMode,
  liveStatusOption: (state) => state.option.liveStatusOption,
  liveTypeOption: (state) => state.option.liveTypeOption,
  areaOption: (state) => state.option.areaOption,
  industryOption: (state) => state.option.industryOption,
  channelsource: (state) => state.option.channelsource,
  deptList: (state) => state.option.deptList,
  adPlatformSimpleList: (state) => state.option.adPlatformSimpleList,
  hasCloudDesktop: (state) => state.user.hasCloudDesktop,
  visibleDialogVideoPublish: (state) => state.user.visibleDialogVideoPublish,
  isNewSocketVideoPublish: (state) => state.user.isNewSocketVideoPublish,
  isUploadVideoSuccess: (state) => state.user.isUploadVideoSuccess,
  signStatus: (state) => state.user.signStatus,
  accountNum: (state) => state.user.accountNum,
  protocolInfo: (state) => state.user.protocolInfo,
  videoDetail: (state) => state.videoManage.videoDetail,
  orgModules: (state) => state.user.orgModules,
  isScene: (state) => state.ai.isScene,
  aiShowType: (state) => state.ai.aiShowType,
  allChannelSwitch: (state) => state.videoManage.allChannelSwitch,
  fuxiVersion: (state) => state.videoManage.fuxiVersion,
  mediaImitateConfig: (state) => state.videoManage.mediaImitateConfig,
  syncDataConfig: (state) => state.videoManage.syncDataConfig,
  history: (state) => state.user.history,
  smsAreaList: (state) => state.global.smsAreaList,
  mailSuffixesList: (state) => state.global.mailSuffixesList,
  curHistory: (state) => state.user.curHistory,
  userMenuId: (state) => state.user.userMenuId,
  historyAddLiveForm:(state) => state.creatLiveRoom.historyAddLiveForm
  // visibleTaks: (state) => state.task.visibleTaks,
  // contentUploadTask: (state) => state.task.contentUploadTask
}
export default getters
